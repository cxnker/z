local Players, RunService, ReplicatedStorage, StarterGui = game:GetService("Players"), game:GetService("RunService"), game:GetService("ReplicatedStorage"), game:GetService("StarterGui")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid, RootPart = Character:WaitForChild("Humanoid"), Character:WaitForChild("HumanoidRootPart")

local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
local Window = WindUI:CreateWindow({
    Title = "Hexagon Client üÉè",
    Icon = "rbxassetid://130960642678383",
    Author = "by Nova ¬∑ v1.0.0",
    Size = UDim2.fromOffset(600, 480),
    Transparent = true,
    Theme = "Dark",
    Resizable = true,
})

WindUI:Notify({
    Title = "Welcome to Hexagon Client",
    Content = "Created by @Roun95",
    Duration = 10,
    Icon = "rbxassetid://130960642678383",
})

local InfoTab = Window:Tab({
    Title = "Info",
    Icon = "info",
    Locked = false,
})
local PlayerTab = Window:Tab({
    Title = "Player",
    Icon = "user",
    Locked = false,
})
local AvatarTab = Window:Tab({
    Title = "Avatar",
    Icon = "tag",
    Locked = false,
})
local ProfileTab = Window:Tab({
    Title = "Profile",
    Icon = "pencil",
    Locked = false,
})
local MusicTab = Window:Tab({
    Title = "Music",
    Icon = "music",
    Locked = false,
})
local TrollTab = Window:Tab({
    Title = "Troll",
    Icon = "ghost",
    Locked = false,
})
local ScriptsTab = Window:Tab({
    Title = "Scripts",
    Icon = "scroll",
    Locked = false,
})
local AdminTab = Window:Tab({
    Title = "Admin",
    Icon = "crown",
    Locked = false,
})
local VipTab = Window:Tab({
    Title = "VIP",
    Icon = "sparkles",
    Locked = false,
})
local TeleportTab = Window:Tab({
    Title = "Teleport",
    Icon = "pin",
    Locked = false,
})
local ProtectionTab = Window:Tab({
    Title = "Protection",
    Icon = "shield",
    Locked = false,
})
-- ==============================
-- INFO
-- ==============================

-- ==============================
-- PLAYER
-- ==============================

-- ==============================
-- AVATAR
-- ==============================

local Remotes = ReplicatedStorage.Remotes
local Wear, ChangeCharacterBody = Remotes.Wear, Remotes.ChangeCharacterBody

AvatarTab:Section({Title = "3D Clothes", Icon = "tag"})

local function equipClothes(clothesID, clothesName)
    local args = { clothesID }
    local success = pcall(function()
        return Wear:InvokeServer(unpack(args))
    end)
    if success then
        print("Clothes " .. clothesName .. " Equipped with success")
    else
        print("Failed to equip " .. clothesName)
    end
end

AvatarTab:Button({
    Title = "Black Arm Bandages 1.0",
    Desc = "TYPE: Shirt",
    Locked = false,
    Callback = function()
        equipClothes(11458078735, "Black-Arm-Bandages-1-0")
    end
})

AvatarTab:Button({
    Title = "Black Oversized Warmers",
    Desc = "TYPE: Sweater",
    Locked = false,
    Callback = function()
        equipClothes(10789914680, "Black-Oversized-Warmers")
    end
})

AvatarTab:Button({
    Title = "Black Oversized Off Shoulder Hoodie",
    Desc = "TYPE: Sweater",
    Locked = false,
    Callback = function()
        equipClothes(18396592827, "Black-Oversized-Off-Shoulder-Hoodie")
    end
})

AvatarTab:Button({
    Title = "White Oversized Off Shoulder Hoodie",
    Desc = "TYPE: Sweater",
    Locked = false,
    Callback = function()
        equipClothes(18396754379, "White-Oversized-Off-Shoulder-Hoodie")
    end
})

AvatarTab:Button({
    Title = "Left Leg Spikes",
    Desc = "TYPE: Pants",
    Locked = false,
    Callback = function()
        equipClothes(10814325667, "Left-Leg-Spikes")
    end
})

AvatarTab:Section({Title = "Character Editor", Icon = "tag"})

AvatarTab:Button({
    Title = "(Mini-Plushie) and Headless",
    Desc = "TYPE: Body",
    Locked = false,
    Callback = function()
	ChangeCharacterBody:InvokeServer({
		[1] = 112722466960512, -- Torso
		[2] = 76079756909323, -- Right Arm
		[3] = 82598238110471, -- Left Arm
		[4] = 107431241133468, -- Right Leg
		[5] = 103380121023771, -- Left Leg
		[6] = 134082579, -- Head
	})
	end
})

-- ==============================
-- PROFILE
-- ==============================

ProfileTab:Section({Title = "Names", Icon = "pencil"})

local names = {
    {"Ôº®Ôº•Ôº∏Ôº°ÔºßÔºØÔºÆ Ôº®ÔºµÔº¢::", " Ôº®Ôº•Ôº∏Ôº°ÔºßÔºØÔºÆ Ôº®ÔºµÔº¢ "},
    {"Ôº™ÔºØÔº´Ôº•Ôº≤", " Ôº™ÔºØÔº´Ôº•Ôº≤ "},
    {"Ôº°Ôº§Ôº≠Ôº©ÔºÆ", " Ôº°Ôº§Ôº≠Ôº©ÔºÆ "},
    {"Ôº§Ôº•Ôº∂", " Ôº§Ôº•Ôº∂ "},
    {"Ôº£ÔºØÔºêÔº¨Ôº´Ôº©Ôº§", " Ôº£ÔºØÔºêÔº¨Ôº´Ôº©Ôº§ "},
    {"Ôº¥ÔºµÔº¢Ôº•Ôº≤Ôº≥ÔºôÔºì", " Ôº¥ÔºµÔº¢Ôº•Ôº≤Ôº≥ÔºôÔºì "},
}

for _, nm in ipairs(names) do
    ProfileTab:Button({
        Title = "Name: " .. nm[1],
        Callback = function()
            ReplicatedStorage.RE["1RPNam1eTex1t"]:FireServer("RolePlayName", nm[2])
        end
    })
end

-- ==============================
-- MUSIC
-- ==============================

-- ==============================
-- TROLL
-- ==============================

-- ==============================
-- SCRIPTS
-- ==============================

ScriptsTab:Section({Title = "Scripts", Icon = "scroll"})

ScriptsTab:Button({
    Title = "Fly Gui V3 (Universal)",
    Callback = function()
        loadstring(game:HttpGet("https://github.com/nxvap/source/raw/main/fly"))()
	end
})

-- ==============================
-- ADMIN
-- ==============================

AdminTab:Section({Title = "Admin", Icon = "crown"})

AdminTab:Button({
    Title = "[Click] Admin Bug (Tool)",
	Callback = function()
local buggedPlayers = {}
local bugConnections = {}
local Remote = ReplicatedStorage.RE:FindFirstChild("1Gu1n")

local tool = Instance.new("Tool")
tool.Name = "Admin Bug"
tool.RequiresHandle = true
tool.CanBeDropped = true

local handle = Instance.new("Part")
handle.Name = "Handle"
handle.Size = Vector3.new(0.1, 0.1, 0.1)
handle.Massless = true
handle.Anchored = false
handle.CanCollide = false
handle.Transparency = 0.5
handle.Color = Color3.fromRGB(255, 0, 0)
local mesh = Instance.new("SpecialMesh", handle)
mesh.MeshType = Enum.MeshType.Sphere
mesh.Scale = Vector3.new(0.05, 0.05, 0.05)
handle.Parent = tool

local function createNotification(title, message, duration)
    game:GetService("StarterGui"):SetCore("SendNotification",{
        Title = title,
        Text = message,
        Duration = duration or 3
    })
end

local function bugPlayer(targetPlayer)
    if not Remote then
        createNotification("‚ö†Ô∏è Warn", "Remote not found")
        return
    end
    
    if not targetPlayer or not targetPlayer.Character then
        createNotification("‚ö†Ô∏è Warn", "Invalid player")
        return
    end
    
    local playerName = targetPlayer.Name
    
    if buggedPlayers[playerName] then
        if bugConnections[playerName] then
            bugConnections[playerName]:Disconnect()
            bugConnections[playerName] = nil
        end
        buggedPlayers[playerName] = nil
        createNotification("üîì Unapplied Bug", playerName .. " debugged player")
        return
    end
    
    buggedPlayers[playerName] = true
    createNotification("üî® Bug Applied", playerName .. " was bugged")
    
    bugConnections[playerName] = RunService.Stepped:Connect(function()
        local target = Players:FindFirstChild(playerName)
        if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then
            if bugConnections[playerName] then
                bugConnections[playerName]:Disconnect()
                bugConnections[playerName] = nil
            end
            buggedPlayers[playerName] = nil
            return
        end

        local crazyVector = Vector3.new(
            math.random(1e25, 1e25),
            math.random(1e25, 1e25),
            math.random(1e25, 1e25)
        )

        local args = {
            [1] = target.Character.HumanoidRootPart,
            [2] = target.Character.HumanoidRootPart,
            [3] = crazyVector,
            [4] = target.Character.HumanoidRootPart.Position,
            [5] = LocalPlayer.Backpack:FindFirstChild("Assault") and LocalPlayer.Backpack.Assault.GunScript_Local:FindFirstChild("MuzzleEffect"),
            [6] = LocalPlayer.Backpack:FindFirstChild("Assault") and LocalPlayer.Backpack.Assault.GunScript_Local:FindFirstChild("HitEffect"),
            [7] = 3000,
            [8] = 3000,
            [9] = { [1] = false },
            [10] = {
                [1] = 10000,
                [2] = Vector3.new(3000, 3000, 3000),
                [3] = BrickColor.new(29),
                [4] = 0.05,
                [5] = Enum.Material.SmoothPlastic,
                [6] = 0.05
            },
            [11] = true,
            [12] = false
        }
        Remote:FireServer(unpack(args))
    end)
end

local function getPlayerFromMouse(mouse)
    local target = mouse.Target
    if not target then return nil end
    local character = target.Parent
    while character and not character:FindFirstChild("Humanoid") do
        character = character.Parent
    end
    if character and character:FindFirstChild("Humanoid") then
        return Players:GetPlayerFromCharacter(character)
    end
    return nil
end

tool.Equipped:Connect(function(mouse)
    local character = tool.Parent
    if character and character:FindFirstChild("Humanoid") and character.Humanoid.RigType == Enum.HumanoidRigType.R15 then

    ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(12928981934) -- Tool Model

        mouse.Button1Down:Connect(function()
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            local animator = humanoid and humanoid:FindFirstChildOfClass("Animator")
            if animator then
                local anim = Instance.new("Animation")
                anim.AnimationId = "rbxassetid://2410679501"
                local track = animator:LoadAnimation(anim)
                track:Play()
            end
            
            local targetPlayer = getPlayerFromMouse(mouse)
            if targetPlayer and targetPlayer ~= LocalPlayer then
                bugPlayer(targetPlayer)
            else
                createNotification("‚ö†Ô∏è Warn", "Click on a player to apply/remove bug")
            end
        end)
        
        createNotification("üì§ Admin Bug equipped", "Click on a player to apply/remove bug")
    end
end)

tool.Unequipped:Connect(function()
    ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(12928981934) -- Tool Model
    createNotification("‚Äãüì• ‚ÄãAdmin Bug saved", "Unequipped tool")
end)

Players.PlayerRemoving:Connect(function(player)
    local playerName = player.Name
    if bugConnections[playerName] then
        bugConnections[playerName]:Disconnect()
        bugConnections[playerName] = nil
    end
    buggedPlayers[playerName] = nil
end)

LocalPlayer.Chatted:Connect(function(message)
    if message:lower() == "/stopallbugs" then
        for _, connection in pairs(bugConnections) do
            if connection then connection:Disconnect() end
        end
        bugConnections = {}
        buggedPlayers = {}
        createNotification("üõë All bugs removed", "All players were debugged")
    elseif message:lower() == "/buggedlist" then
        local count = 0
        for _ in pairs(buggedPlayers) do count = count + 1 end
        createNotification("üìã Player Bug list", count > 0 and (count.." players bugged") or "No bugged players were found")
    end
end)

tool.Parent = LocalPlayer.Backpack
createNotification("‚úÖ Admin Bug enable", "Added tool, Use /stopallbugs to stop all bugs, and /buggedlist for view listed players")
    end
})

-- ==============================
-- VIP
-- ==============================

VipTab:Section({Title = "VIP", Icon = "sparkles"})

-- ==============================
-- TELEPORTS
-- ==============================

TeleportTab:Section({Title = "Teleports", Icon = "pin"})

local sites = {
    {"Hill", CFrame.new(-348.64, 65.94, -458.08)},
    {"Start", CFrame.new(-26.17, 3.48, -0.93)},
    {"Hotel", CFrame.new(159.10, 3.32, 164.97)},
    {"Beach", CFrame.new(55.69, 2.94, -1403.60)},
    {"Beach2", CFrame.new(42.39, 2.94, 1336.14)},
    {"Farm", CFrame.new(-766.41, 2.92, -61.10)}
}

for _, tp in pairs(sites) do
    TeleportTab:Button({
        Title = tp[1],
        Callback = function()
            RootPart.CFrame = tp[2]
        end
    })
end

-- ==============================
-- PROTECTION
-- ==============================


